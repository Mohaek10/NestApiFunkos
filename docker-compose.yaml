services:
  postgres-db:
    container_name: funkolandia-postgres
    image: postgres:12.2-alpine
    restart: always
    env_file: .env
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - ./database/funkos.sql:/docker-entrypoint-initdb.d/funkos.sql
    networks:
      - funkolandia-network
  mongo-db:
    container_name: funkolandia-mongo
    image: mongo:5.0
    restart: always
    env_file: .env
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
      MONGO_INITDB_DATABASE: ${MONGO_DB}
    ports:
      - ${MONGO_PORT}:27017
    volumes:
      - ./database/funkolandia.js:/docker-entrypoint-initdb.d/funkolandia.js:ro
    networks:
      - funkolandia-network

  adminer-postgres:
    container_name: funkolandia-adminer
    image: adminer:latest
    restart: always
    env_file: .env
    ports:
      - 8080:8080
    depends_on:
      - postgres-db
    networks:
      - funkolandia-network

  mongo-express-db:
    container_name: funko-db_mongo-express-db
    image: mongo-express
    restart: always
    env_file: .env
    ports:
      - 8081:8081
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: ${MONGO_USER}
      ME_CONFIG_MONGODB_ADMINPASSWORD: ${MONGO_PASSWORD}
      ME_CONFIG_MONGODB_SERVER: mongo-db
    depends_on:
      - mongo-db
    networks:
      - funkolandia-network
networks:
    funkolandia-network:
        driver: bridge